var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 2ag5網站:\xa0  https://mdecd2025.github.io/2a-ag5/ \n 2ag5作業倉儲:\xa0 https://github.com/mdecd2025/2a-ag5 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Homework', 'text': '', 'tags': '', 'url': 'Homework.html'}, {'title': 'w1', 'text': '心得：上個禮拜班上多了幾位重補修的學長姊，所以老師從基本的建立個人網站及倉儲開始教起。 \n', 'tags': '', 'url': 'w1.html'}, {'title': 'Week', 'text': '\n', 'tags': '', 'url': 'Week.html'}, {'title': 'list', 'text': '網站: \n 41223106: https://mdecd2025.github.io/hw-CYA41223106/ \n 41223107:  https://mdecd2025.github.io/hw-Lin41223107/ \n 41223117: \xa0https://mdecd2025.github.io/hw-Manto8/ \n 41223121: https://mdecd2025.github.io/hw-yan21ed/ \n 41223126: https://mdecd2025.github.io/hw-Ren911308/ \n 41223150: https://mdecd2025.github.io/hw-41223150/ \n \n 倉儲: \n 41223106: https://github.com/mdecd2025/hw-CYA41223106 \n 41223107:  https://github.com/mdecd2025/hw-Lin41223107 \n 41223117: https://github.com/mdecd2025/hw-Manto8 \n 41223121: https://github.com/mdecd2025/hw-yan21ed \n 41223126: https://github.com/mdecd2025/hw-Ren911308 \xa0 \n 41223150: https://github.com/mdecd2025/hw-41223150 \n \n', 'tags': '', 'url': 'list.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'task5', 'text': '1.請用繁體中文詳細說明下列資料: \xa0 https://cyberbotics.com/doc/guide/introduction-to-webots\xa0 \n 2.請整理 \xa0 https://cyberbotics.com/doc/guide/introduction-to-webots \xa0 中重要的英文單字與用法, 並且針對其 中所使用的英文文法逐句說明. \n 3.請摘要出下列內容: (放入英文文章內容) \n 4.請列出上述文章中的重要的英文單字與解釋, 以及出現在文句中的用法: \n \n Webots  - 一款專業的移動機器人模擬軟體 \n \n \n Example:  "Webots is a professional mobile robot simulation software package." \n \n \n simulation  - 模擬，指在虛擬環境中再現現實世界的物理特性 \n \n \n Example:  "A Webots simulation is composed of following items:" \n \n \n prototyping  - 原型製作，通常用於研究或開發階段 \n \n \n Example:  "Webots is well suited for research and educational projects related to mobile robotics." \n \n \n virtual  - 虛擬的，非實體的 \n \n \n Example:  "The user can create 3D virtual worlds with physics properties." \n \n \n physics properties  - 物理屬性，如質量、摩擦力等 \n \n \n Example:  "3D virtual worlds with physics properties such as mass, joints, friction coefficients, etc." \n \n \n mobile robots  - 移動機器人，可以行走、移動或飛行的機器人 \n \n \n Example:  "The user can add simple passive objects or active objects called mobile robots." \n \n \n locomotion  - 運動方式，例如輪式、腿式或飛行方式 \n \n \n Example:  "These robots can have different locomotion schemes (wheeled robots, legged robots, or flying robots)." \n \n \n sensor  - 感測器，例如距離感測器、相機、觸碰感測器等 \n \n \n Example:  "They may be equipped with a number of sensor and actuator devices." \n \n \n actuator  - 執行器，例如馬達、驅動輪等，能讓機器人執行動作 \n \n \n Example:  "They may be equipped with a number of sensor and actuator devices." \n \n \n controller  - 控制器，負責控制機器人行為的程式 \n \n \n Example:  "A controller is a computer program that controls a robot specified in a world file." \n \n \n Supervisor Controller  - 主管控制器，擁有更高級的控制權限 \n \n \n Example:  "The Supervisor controller is the controller of a Robot whose supervisor field is set to TRUE." \n \n \n interface  - 介面，指軟體或硬體之間的互動方式 \n \n \n Example:  "Webots also contains a number of interfaces to real mobile robots." \n \n \n world  - 世界，在 Webots 中指包含機器人及環境的 3D 場景 \n \n \n Example:  "A world, in Webots, is a 3D description of the properties of robots and of their environment." \n \n \n hierarchical structure  - 階層結構，表示物件之間的組成關係 \n \n \n Example:  "Worlds are organized as hierarchical structures where objects can contain other objects." \n \n \n VRML97  - 一種 3D 描述語言， Webots 使用它來描述場景 \n \n \n Example:  "If you don\'t want to use existing robot models...you will need a basic knowledge of 3D computer graphics and VRML97 description language." \n \n \n plugin  - 外掛程式，可以擴充 Webots 的功能 \n \n \n Example:  "An optional physics plugin that can be used to modify Webots regular physics behavior." \n \n \n robot locomotion  - 機器人運動方式，例如四足機器人、仿人機器人等 \n \n \n Example:  "Robot locomotion research (legged, humanoids, quadrupeds robots, etc.)." \n \n \n multi-agent  - 多智能體，指多個機器人協同工作 \n \n \n Example:  "Multi-agent research (swarm intelligence, collaborative mobile robots groups, etc.)." \n \n \n adaptive behavior  - 適應性行為，通常涉及 AI 或機器學習 \n \n \n Example:  "Adaptive behavior research (genetic algorithm, neural networks, AI, etc.)." \n \n \n genetic algorithm  - 遺傳演算法，一種基於自然選擇的演算法 \n \n \n Example:  "Adaptive behavior research (genetic algorithm, neural networks, AI, etc.)." \n \n \n neural networks  - 神經網路，一種機器學習模型 \n \n \n Example:  "Adaptive behavior research (genetic algorithm, neural networks, AI, etc.)." \n \n \n C/C++/Java/Python/MATLAB  - Webots 支援的程式語言 \n \n \n Example:  "A basic knowledge of the C, C++, Java, Python or MATLAB programming language is necessary to program your own robot controllers." \n \n \n GitHub Issues  - GitHub 的問題回報系統，用來回報  Webots  錯誤 \n \n \n Example:  "GitHub Issues should be used only to report bugs found in Webots." \n \n \n Discord  - 一種即時通訊平台，可用來討論  Webots \n \n \n Example:  "Discord can be used for quick questions and spontaneous discussions with the Webots community." \n \n \n byte code  - 位元組碼， Java  需先編譯為  byte code  再由  JVM  執行 \n \n \n Example:  "Java controller need to be compiled to byte code (\'.class\' files or \'.jar\') and then interpreted by a Java Virtual Machine." \n \n 5.請詳細說明如何採手動方式在 Webots 建立下列場景: \n 6.希望可以手把手一步步說明該如何利用圖形介面 menu 建立這個場景, 過程中有那些要點必須特別注意? \n', 'tags': '', 'url': 'task5.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};